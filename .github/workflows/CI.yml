name: "CI"

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "**.py"
      - "**requirements*.txt"
      - pyproject.toml
      - ".github/workflows/CI.yml"
      - "!docs/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install -r requirements-dev.txt
          pip install -e .
      - name: Run pre-commit
        run: |
          pre-commit run --all-files
          pre-commit try-repo .
      - name: Build wheel
        run: python3 -m pip wheel --no-deps -w dist .
      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v3
        with:
          name: commit-check_wheel
          path: ${{ github.workspace }}/dist/*.whl
      # - name: Collect Coverage
      #   run: coverage run -m pytest

      # - run: coverage report && coverage xml
      # - uses: codecov/codecov-action@v3
      #   with:
      #     files: ./coverage.xml
      #     fail_ci_if_error: true # optional (default = false)
      #     verbose: true # optional (default = false)

  install:
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        py: ['3.7', '3.8', '3.9', '3.10']
        os: ['windows-latest', ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}

      - name: download wheel artifact
        uses: actions/download-artifact@v3
        with:
          name: commit-check_wheel
          path: dist

      - name: Install commit-check
        # using a wildcard as filename on Windows requires a bash shell
        shell: bash
        run: python3 -m pip install dist/*.whl

      - name: Print commit check help
        run: commit-check -h
