name: Release

on:
  release:
    branches: [main]
    types: [published]

jobs:
  publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      # use fetch --all for setuptools_scm to work
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Build wheel
      run: |
        # Install dependencies
        python -m pip install --upgrade pip twine
        # Build wheel
        python -m pip wheel -w dist .
        # Check distribution
        twine check dist/commit_check*

    - name: Publish package to TestPyPI
      if: github.event_name == 'workflow_dispatch' && github.repository == 'commit-check/commit-check'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
      run: twine upload --repository testpypi dist/commit_check*
      continue-on-error: true

    - name: Publish package to PyPI
      if: github.event_name != 'workflow_dispatch' && github.repository == 'commit-check/commit-check'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/commit_check*

    - name: Build docker image
      run:
        tag=`ls dist/commit_check* | cut -d - -f 2`
        docker build -f Dockerfile -t commit-check:$tag
        echo $CR_PAT | docker login ghcr.io -u shenxianpeng --password-stdin
      env:
          CR_PAT: ${{ secrets.CR_PAT }}
    - name: Publish image to container registry
      run: docker push ghcr.io/commit-check/commit-check:$tag
